一、识别webview

1.用定位工具查看页面，发现页面上有些区域无法定位到，如下图左边红色区域，只能定位到这个大框框，红色框里面的元素是无法识别的。

2.这时候可以查看元素属性，如右图它的class属性，上面写着WebView，那毫无疑问这种页面就是webview了。

二、contexts

1.context是中文翻译是上下文，环境，当然学过selenium的同学，也可以理解为句柄（handle）,其实是一回事，反正知道是两个不同的环境就行了。

2.先获取页面是contexts环境，如下图红色区域，获取的是一个list列表：

NATIVE_APP:这个就是native，也就是原生的

WEBVIEW_com.xxxx :这个就是webview

3.当看到打印出来有下图两个，就说明获取到webview的context了（当然也有的app有坑，可能明明有webview，却通过contexts获取不到，这种需要特殊处理了）

三、切换到webview

1.要想操作webview上的元素，第一步需要切换环境（跟selenium的切换iframe,切换handle思路是一样）

2.切换方法：switch_to.context(参数是webview的context)

由于第二步已经获取到contexts是一个list对象，取这个list的第二个参数就行，也就是contexts[1]


