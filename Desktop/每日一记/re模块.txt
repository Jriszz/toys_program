re模块下的函数

1.compile(pattern):创建模式对象

import re

pat = re.compile('A')                  #等价于 re.search('A','CBA')
m = pat.search('CBA')
<_sre.SRE_Match object at 0x9d690c8>   #匹配到了，返回MatchObject（True）

m=pat.search('CBD')
print m
None                                   #没有匹配到，返回None（False）


2.search(pattern,string):在字符串中寻找模式

m = re.search('asd','ASDasd')
print m
<_sre.SRE_Match object at 0xb72cd6e8>  #匹配到了，返回MatchObject（True）
m = re.search('asd','ASDASD')
print m
None                                   #没有匹配到，返回None（False）

3.match(pattern,string)：在字符串开始处匹配模式
m = re.match('a','Aasd')
print m
None                                  #没有匹配到，返回None（False
m = re.match('a','aASD')
print m
<_sre.SRE_Match object at 0xb72cd6e8> #匹配到了，返回MatchObject（True）

4.findall(pattern,string)：列表形式返回匹配项

re.findall('a','ASDaDFGAa') 
['a', 'a']                           #列表形式返回匹配到的字符串

pat = re.compile('a')
pat.findall('ASDaDFGAa')
['a', 'a']                           #列表形式返回匹配到的字符串

pat = re.compile('[A-Z]+')       #正则匹配：'[A-Z]+' 后面有说明
pat.findall('ASDcDFGAa')
['ASD', 'DFGA']                      #找到匹配到的字符串

pat = re.compile('[A-Z]')
pat.findall('ASDcDFGAa')         #正则匹配：'[A-Z]+' 后面有说明
['A', 'S', 'D', 'D', 'F', 'G', 'A']  #找到匹配到的字符串

pat = re.compile('[A-Za-z]')     #正则匹配：'[A-Za-z]+' 匹配所有单词，后面有说明
pat.findall('ASDcDFGAa')
['A', 'S', 'D', 'c', 'D', 'F', 'G', 'A', 'a'] 

5.sub(pat,repl,string) ：用repl替换 pat匹配项